import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns 
import ast
import time
from collections import Counter
import logging

st.set_page_config(
    page_title="Analyse de la Perte de Popularit√© de Food.com",
    page_icon="üçΩÔ∏è",
    layout="centered",
    initial_sidebar_state="collapsed",
)

st.title("üìâ Food.com : Diagnostiquer la Perte de Popularit√©")

st.markdown("""
Bienvenue dans cette application d'analyse interactive.  
Le site **Food.com**, autrefois une r√©f√©rence pour les amateurs de cuisine, est en perte de vitesse, comme le montrent les tendances au fil des ann√©es.  
Notre objectif est de comprendre les causes de ce d√©clin en examinant les **trends** et les caract√©ristiques des recettes les plus populaires.  
**Objectif final :** Identifier des leviers pour revitaliser Food.com et regagner sa communaut√© culinaire.
""")

st.subheader("üìä √âvolution de la popularit√© des recettes au fil des ans")

st.markdown("""
Ce graphique illustre une tendance √† la baisse constante de la popularit√© des recettes sur Food.com depuis 2000. 
Une exploration des caract√©ristiques des recettes populaires est n√©cessaire pour mieux comprendre ce ph√©nom√®ne.
""")

st.subheader("‚ú® Qu'est-ce qui rend une recette intemporelle ?")

st.markdown("""
Les recettes les plus populaires ont souvent des temps de pr√©paration mod√©r√©s, indiquant un √©quilibre entre simplicit√© et raffinement. 
Analysons ces param√®tres plus en d√©tail pour d√©gager des tendances exploitables.
""")

st.subheader("üç≤ L'√©volution des pr√©f√©rences culinaires")

st.markdown("""
Les tendances des cat√©gories culinaires √©voluent avec le temps, refl√©tant les go√ªts et pr√©f√©rences des utilisateurs. 
Explorer ces donn√©es peut nous aider √† identifier des opportunit√©s pour innover sur Food.com.
""")

st.markdown("""
---
### üéØ Que pouvons-nous apprendre de ces donn√©es ?
Passez √† la section suivante pour d√©couvrir des **insights** et des **recommandations** bas√©es sur ces analyses !
""")

if st.button("Commencer l'analyse"):
    st.write("üöÄ Passons √† l'analyse d√©taill√©e !")

# def local_css(file_name):
#     with open(file_name) as f:
#         st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

# local_css("style.css")

# st.title("Custom Styled Streamlit App")
# st.write("This app has a custom background and text color!")

# page_background = """
# <style>
# .stApp {
#     background-color: #FF0000; /* Fond rouge pour toute la page */
#     color: #FFFFFF; /* Texte en blanc pour plus de lisibilit√© */
# }
# .css-1d391kg {  /* Classe de la sidebar, peut varier selon la version de Streamlit */
#     background-color: #FF0000; /* Rouge pour la sidebar */
#     color: #FFFFFF; /* Texte en blanc pour la sidebar */
# }
# </style>
# </style>
# """

# # Injecter le CSS dans la page
# st.markdown(page_background, unsafe_allow_html=True)